{
  "parser": "@typescript-eslint/parser", // Specifies the ESLint parser
  "plugins": ["@typescript-eslint", "react-native", "prettier"],
  "parserOptions": {
    "sourceType": "module"
  },
  "extends": [
    "airbnb",
    "plugin:@typescript-eslint/recommended",
    "prettier/@typescript-eslint", // Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
    "plugin:prettier/recommended", // Enables eslint-plugin-prettier and displays prettier errors as ESLint errors.
    "prettier/react",
    "prettier/@typescript-eslint"
  ],
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".ts", ".tsx", "native.js", ".js", ".jsx"]
      }
    }
  },
  "rules": {
    // note you must disable the base rule as it can report incorrect errors https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-use-before-define.md#how-to-use
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error"],
    // https://stackoverflow.com/questions/41746028/proptypes-in-a-typescript-react-application
    // "react/prop-types": [0],
    // On ne peut pas écrire écrire de jsx dans le tsx
    "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx", ".tsx"] }],
    // Soit eslint demandait d'ajouter l'extension, soit ts demandait de l'enlever
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
   ] 
  }
}